import: python:latest
variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
    paths:
        - .cache/pip
        - venv/

before_script:
    - python -V
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip setuptools wheel pylint pytest nuitka-setuptools Nuitka

stages:
    - Static Analysis
    - Test
    - Deploy

pylint:
    stage: Static Analysis
    script:
        - pylint --generate-rcfile > .pylintrc
        - pylint --rcfile=.pylintrc --confidence=INFERENCE_FAILURE src/

pytest-base:
    stage: Test
    script:
        - python3 src/flask.py -p test01
        - | \
          [ -d test01 ]&& echo True || echo False; \
          [ -f test01/run.py ]&& echo True || echo False; \
          [ -f test01/config.py ]&& echo True || echo False; \
          [ -f test01/apps/__init__.py ]&& echo True || echo False; \
          [ -f test01/apps/routes.py ]&& echo True || echo False; \
          [ -f test01/apps/static/default.css ]&& echo True || echo False; \
          [ -f test01/apps/templates/base.html ]&& echo True || echo False; \
          [ -f test01/apps/templates/index.html ]&& echo True || echo False; \
          [ -f test01/apps/templates/sample.html ]&& echo True || echo False
        - cp -rv tests test01/

pytest-app-base-unit-testing:
    stage: Test
    script:
        - cd test01/; pytest -v

LinuxDeploy:
    stage: Deploy
    script:
        - nuitka3 --run --standalone \
          --remove-output \
          --output-dir=src/ \
          --show-progress \
          src/flask.py
        - tar -acv --directory=src flask.dist -f out.tgz
    tags:
        - deployLinux
    artifacts:
        paths:
            - ./out.tgz
