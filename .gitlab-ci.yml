# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  DOCKER_HOST: "tcp://localhost:2375"
  TRIGGER_TOKEN: "dc021b6d66845a124e8a7a1e2176c0"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well

cache:
    paths:
        - .cache/pip
        - venv/

before_script:
    - python -V
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip setuptools wheel pylint pytest nuitka-setuptools Nuitka

stages:
    - Static Analysis
    - Test
    - Commit
    - Deploy

pylint:
    stage: Static Analysis
    script:
        - pylint --generate-rcfile > .pylintrc
        - pylint --rcfile=.pylintrc --confidence=INFERENCE_FAILURE src/

UnitTest:
    stage: Test
    script:
        - |   
            python3 src/flask.py -p test01
            [ -d test01 ] && true || false
            [ -f test01/run.py ] && true || false
            [ -f test01/config.py ] && true || false
            [ -f test01/apps/__init__.py ] && true || false
            [ -f test01/apps/routes.py ] && true || false
            [ -f test01/apps/static/default.css ] && true || false
            [ -f test01/apps/templates/base.html ] && true || false
            [ -f test01/apps/templates/index.html ] && true || false
            [ -f test01/apps/templates/sample.html ] && true || false
            cp -rv tests test01/
            cd test01/
            pip install flask
            pytest -v

Trigger_build:
    stage: Deploy
    script:
        - "curl -X POST -F token=$TRIGGER_TOKEN -F ref=REF_NAME https://gitlab.com/api/v4/projects/21472626/trigger/pipeline"

LinuxDeploy:
    stage: Deploy
    script:
        - |  
            nuitka3 --run --standalone \
              --remove-output \
              --output-dir=src/ \
              --show-progress \
              src/flask.py; \
            tar -acv --directory=src flask.dist -f out.tgz
    tags:
        - dep
    only:
        - master
        - merge branch
    artifacts:
        paths:
            - ./out.tgz
